{
    "openapi": "3.0.0",
    "info": {
        "title": "FXREBATE PROJECT",
        "description": "REACT Progressive Web App / Stand on the shoulders of giants",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "operationId": "33d7fc07faa3d5c75283036570e14833",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "These credentials do not match our records"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "operationId": "8e0811b846ed9dd82247528f545eb011",
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "b8bad4d8e0c29947b13f09791c75889b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/v1/account-types": {
            "get": {
                "tags": [
                    "AccountType"
                ],
                "summary": "Get all account types",
                "operationId": "f9f64e4c4798cc251b26c069d60c7ab1",
                "parameters": [
                    {
                        "name": "broker_id",
                        "in": "query",
                        "description": "Filter by broker ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "zone_id",
                        "in": "query",
                        "description": "Filter by zone ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "broker_type",
                        "in": "query",
                        "description": "Filter by broker type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "broker",
                                "crypto",
                                "prop_firm"
                            ]
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "language_code",
                        "in": "query",
                        "description": "Language code for translations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AcountType"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "AccountType"
                ],
                "summary": "Create a new account type",
                "operationId": "c8484f7765255ecd597ac503181445bf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "broker_type",
                                    "broker_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Standard Account"
                                    },
                                    "broker_type": {
                                        "type": "string",
                                        "enum": [
                                            "broker",
                                            "crypto",
                                            "prop_firm"
                                        ],
                                        "example": "broker"
                                    },
                                    "commission_value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.5
                                    },
                                    "commission_unit": {
                                        "type": "string",
                                        "example": "pips"
                                    },
                                    "execution_model": {
                                        "type": "string",
                                        "example": "STP"
                                    },
                                    "max_leverage": {
                                        "type": "string",
                                        "example": "1:500"
                                    },
                                    "spread_type": {
                                        "type": "string",
                                        "example": "Fixed"
                                    },
                                    "min_deposit_value": {
                                        "type": "string",
                                        "example": "100"
                                    },
                                    "min_deposit_unit": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "min_trade_size_value": {
                                        "type": "string",
                                        "example": "0.01"
                                    },
                                    "min_trade_size_unit": {
                                        "type": "string",
                                        "example": "lots"
                                    },
                                    "stopout_level_value": {
                                        "type": "string",
                                        "example": "20"
                                    },
                                    "stopout_level_unit": {
                                        "type": "string",
                                        "example": "%"
                                    },
                                    "trailing_stops": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_scalping": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_hedging": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_news_trading": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_cent_accounts": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "allow_islamic_accounts": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_invariant": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "broker_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "zone_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "urls": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://example.com"
                                                },
                                                "url_type": {
                                                    "type": "string",
                                                    "example": "website"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Website"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "website"
                                                },
                                                "option_category_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account type created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AcountType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/account-types/create": {
            "get": {
                "tags": [
                    "AccountType"
                ],
                "summary": "Get form data for creating account type",
                "operationId": "563f5749716d50799e90a0b402bb0480",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create form endpoint"
                                        },
                                        "data": {
                                            "properties": {
                                                "brokers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "zones": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "option_categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/account-types/{id}": {
            "get": {
                "tags": [
                    "AccountType"
                ],
                "summary": "Get account type by ID",
                "operationId": "6a44ff23c7ded6ce131aca59e9479365",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AcountType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account type not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "AccountType"
                ],
                "summary": "Update account type",
                "operationId": "072126222939e4a6a61acda3513c8b32",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Standard Account"
                                    },
                                    "broker_type": {
                                        "type": "string",
                                        "enum": [
                                            "broker",
                                            "crypto",
                                            "prop_firm"
                                        ],
                                        "example": "broker"
                                    },
                                    "commission_value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2
                                    },
                                    "commission_unit": {
                                        "type": "string",
                                        "example": "pips"
                                    },
                                    "execution_model": {
                                        "type": "string",
                                        "example": "ECN"
                                    },
                                    "max_leverage": {
                                        "type": "string",
                                        "example": "1:1000"
                                    },
                                    "spread_type": {
                                        "type": "string",
                                        "example": "Variable"
                                    },
                                    "min_deposit_value": {
                                        "type": "string",
                                        "example": "200"
                                    },
                                    "min_deposit_unit": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "min_trade_size_value": {
                                        "type": "string",
                                        "example": "0.01"
                                    },
                                    "min_trade_size_unit": {
                                        "type": "string",
                                        "example": "lots"
                                    },
                                    "stopout_level_value": {
                                        "type": "string",
                                        "example": "25"
                                    },
                                    "stopout_level_unit": {
                                        "type": "string",
                                        "example": "%"
                                    },
                                    "trailing_stops": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_scalping": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_hedging": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_news_trading": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "allow_cent_accounts": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "allow_islamic_accounts": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_invariant": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "broker_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "zone_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "urls": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://example.com"
                                                },
                                                "url_type": {
                                                    "type": "string",
                                                    "example": "website"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Website"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "website"
                                                },
                                                "option_category_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "urls_to_delete": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account type updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/AcountType"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account type not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AccountType"
                ],
                "summary": "Delete account type",
                "operationId": "ce41945dcbb977c42ccc77d389655d62",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Account type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account type not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/brokers/": {
            "get": {
                "tags": [
                    "Broker"
                ],
                "summary": "Get all brokers",
                "operationId": "b26d07fcdea5773e6cd7ddda550506de",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "These request do not match our records"
                    }
                }
            }
        },
        "/api/v1/brokers": {
            "post": {
                "tags": [
                    "Broker"
                ],
                "summary": "Add a new broker",
                "operationId": "60a61cac11e93f5f9cb5bc38d2d7948c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "registration_language": {
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "registration_zone": {
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "broker_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "These credentials do not match our records"
                    }
                }
            }
        },
        "/api/v1/broker/{id}": {
            "get": {
                "tags": [
                    "Broker"
                ],
                "summary": "Show a broker",
                "operationId": "fb382c8caef7d7e1be19438f21cd0f2b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Broker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "These request do not match our records"
                    }
                }
            },
            "put": {
                "tags": [
                    "Broker"
                ],
                "summary": "Update broker",
                "operationId": "17715e762a5918b1fce4ab878b538f60",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Broker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "registration_language": {
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "registration_zone": {
                                        "type": "string",
                                        "example": "US"
                                    },
                                    "broker_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "These credentials do not match our records"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Broker"
                ],
                "summary": "Delete broker",
                "operationId": "084f3abaae194c1242baf66a2d03e26d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Broker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/v1/companies": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get all companies",
                "operationId": "1acb37580ddcfbe9ab1f43f1dca2c2c6",
                "parameters": [
                    {
                        "name": "broker_id",
                        "in": "query",
                        "description": "Filter by broker ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "published",
                                "pending",
                                "rejected"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in name and licence_number",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "status",
                                "year_founded",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "language_code",
                        "in": "query",
                        "description": "Language code for translations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Company"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Create a new company",
                "operationId": "fa2ac605f23e6b4ac7f987f14739ba92",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "broker_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 250,
                                        "example": "TechCorp Solutions"
                                    },
                                    "name_p": {
                                        "type": "string",
                                        "maxLength": 250,
                                        "example": "TechCorp Solutions P"
                                    },
                                    "licence_number": {
                                        "type": "string",
                                        "example": "TECH-2024-001"
                                    },
                                    "licence_number_p": {
                                        "type": "string",
                                        "maxLength": 250,
                                        "example": "TECH-2024-001-P"
                                    },
                                    "banner": {
                                        "type": "string",
                                        "example": "https://example.com/banners/techcorp-banner.jpg"
                                    },
                                    "banner_p": {
                                        "type": "string",
                                        "example": "https://example.com/banners/techcorp-banner-p.jpg"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Leading technology solutions provider"
                                    },
                                    "description_p": {
                                        "type": "string",
                                        "example": "Leading technology solutions provider"
                                    },
                                    "year_founded": {
                                        "type": "string",
                                        "example": "2018"
                                    },
                                    "year_founded_p": {
                                        "type": "string",
                                        "example": "2018"
                                    },
                                    "employees": {
                                        "type": "string",
                                        "example": "250-500"
                                    },
                                    "employees_p": {
                                        "type": "string",
                                        "example": "250-500"
                                    },
                                    "headquarters": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "San Francisco, California, USA"
                                    },
                                    "headquarters_p": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "San Francisco, California, USA"
                                    },
                                    "offices": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "New York, London, Singapore, Tokyo"
                                    },
                                    "offices_p": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "New York, London, Singapore, Tokyo"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "published",
                                            "pending",
                                            "rejected"
                                        ],
                                        "example": "published"
                                    },
                                    "status_reason": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": ""
                                    },
                                    "broker_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "zone_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Company created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Company"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/companies/create": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get form data for creating company",
                "operationId": "db75542fbf1e58735d2a645b79221378",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create form endpoint"
                                        },
                                        "data": {
                                            "properties": {
                                                "brokers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "zones": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "status_options": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/companies/{id}": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get company by ID",
                "operationId": "f8b8d241e9ef04cd3977b4349d284111",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Company"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Company"
                ],
                "summary": "Update company",
                "operationId": "258815f881ea9aa8be637506821f9e3a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 250,
                                        "example": "Updated TechCorp Solutions"
                                    },
                                    "name_p": {
                                        "type": "string",
                                        "maxLength": 250,
                                        "example": "Updated TechCorp Solutions P"
                                    },
                                    "licence_number": {
                                        "type": "string",
                                        "example": "TECH-2024-001-REV"
                                    },
                                    "licence_number_p": {
                                        "type": "string",
                                        "maxLength": 250,
                                        "example": "TECH-2024-001-REV-P"
                                    },
                                    "banner": {
                                        "type": "string",
                                        "example": "https://example.com/banners/techcorp-banner-new.jpg"
                                    },
                                    "banner_p": {
                                        "type": "string",
                                        "example": "https://example.com/banners/techcorp-banner-new-p.jpg"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated: Leading technology solutions provider"
                                    },
                                    "description_p": {
                                        "type": "string",
                                        "example": "Updated: Leading technology solutions provider"
                                    },
                                    "year_founded": {
                                        "type": "string",
                                        "example": "2018"
                                    },
                                    "year_founded_p": {
                                        "type": "string",
                                        "example": "2018"
                                    },
                                    "employees": {
                                        "type": "string",
                                        "example": "500-750"
                                    },
                                    "employees_p": {
                                        "type": "string",
                                        "example": "500-750"
                                    },
                                    "headquarters": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "San Francisco, California, USA"
                                    },
                                    "headquarters_p": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "San Francisco, California, USA"
                                    },
                                    "offices": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "New York, London, Singapore, Tokyo, Berlin, Toronto"
                                    },
                                    "offices_p": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "New York, London, Singapore, Tokyo, Berlin, Toronto"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "published",
                                            "pending",
                                            "rejected"
                                        ],
                                        "example": "published"
                                    },
                                    "status_reason": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": ""
                                    },
                                    "broker_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "zone_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Company"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Company"
                ],
                "summary": "Delete company",
                "operationId": "bc7d58d0575cba105a2bfd7146e25bd4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Company deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/option-values": {
            "get": {
                "tags": [
                    "OptionValue"
                ],
                "summary": "Get all option values",
                "operationId": "14253d030b7efd74f375be5ae08254f2",
                "parameters": [
                    {
                        "name": "broker_id",
                        "in": "query",
                        "description": "Filter by broker ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "broker_option_id",
                        "in": "query",
                        "description": "Filter by broker option ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "option_slug",
                        "in": "query",
                        "description": "Filter by option slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in value, public_value, and option_slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "option_slug",
                                "value",
                                "status",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "language_code",
                        "in": "query",
                        "description": "Language code for translations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "OptionValue"
                ],
                "summary": "Create a new option value",
                "operationId": "964407414fce814aac573983d36f3810",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "option_slug": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "minimum_deposit"
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "100"
                                    },
                                    "public_value": {
                                        "type": "string",
                                        "example": "$100"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "status_message": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Active option"
                                    },
                                    "default_loading": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "type": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "number"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "example": {
                                            "unit": "USD",
                                            "currency": "USD"
                                        }
                                    },
                                    "is_invariant": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "delete_by_system": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "broker_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "broker_option_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "zone_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Option value created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option value created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/option-values/create": {
            "get": {
                "tags": [
                    "OptionValue"
                ],
                "summary": "Get form data for creating option value",
                "operationId": "8a00bd438e9ae1ee4426c2739d4a4c74",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create form endpoint"
                                        },
                                        "data": {
                                            "properties": {
                                                "brokers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "broker_options": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "zones": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "status_options": {
                                                    "type": "object"
                                                },
                                                "type_options": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/brokers/{broker_id}/option-values": {
            "put": {
                "tags": [
                    "OptionValue"
                ],
                "summary": "Update multiple option values for a broker",
                "operationId": "2f6158fb5c4fe54e984f2587956d0a49",
                "parameters": [
                    {
                        "name": "broker_id",
                        "in": "path",
                        "description": "Broker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "option_values": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "option_slug": {
                                                    "type": "string",
                                                    "example": "minimum_deposit"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "200"
                                                },
                                                "public_value": {
                                                    "type": "string",
                                                    "example": "$200"
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "broker_option_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Option values updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option values updated successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "OptionValue"
                ],
                "summary": "Create multiple option values for a broker",
                "operationId": "84bb17ba818d3fb5e4f73307a8a6991f",
                "parameters": [
                    {
                        "name": "broker_id",
                        "in": "path",
                        "description": "Broker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "option_values": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "option_slug": {
                                                    "type": "string",
                                                    "example": "minimum_deposit"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "100"
                                                },
                                                "public_value": {
                                                    "type": "string",
                                                    "example": "$100"
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "broker_option_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Option values created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option values created successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/option-values/{id}": {
            "get": {
                "tags": [
                    "OptionValue"
                ],
                "summary": "Get option value by ID",
                "operationId": "da0df6dd80b3ad03fbaad260ebc731d6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Option value ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option value not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "OptionValue"
                ],
                "summary": "Update option value",
                "operationId": "b8feef268a22c76ad75259521e9efe8d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Option value ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "option_slug": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "minimum_deposit"
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "200"
                                    },
                                    "public_value": {
                                        "type": "string",
                                        "example": "$200"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "status_message": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Updated option"
                                    },
                                    "default_loading": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "type": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "number"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "example": {
                                            "unit": "USD",
                                            "currency": "USD"
                                        }
                                    },
                                    "is_invariant": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "delete_by_system": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "broker_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "broker_option_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "zone_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Option value updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option value updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option value not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OptionValue"
                ],
                "summary": "Delete option value",
                "operationId": "bec45aa61c31bd4335d9d9b6d1add4a2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Option value ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Option value deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Option value deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option value not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/option-values/{id}/edit": {
            "get": {
                "tags": [
                    "OptionValue"
                ],
                "summary": "Get form data for editing option value",
                "operationId": "ccee7b5f8f0f21cc537fa3d70dadc1cc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Option value ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Edit form endpoint"
                                        },
                                        "data": {
                                            "properties": {
                                                "option_value": {
                                                    "type": "object"
                                                },
                                                "form_data": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Option value not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/regulators": {
            "get": {
                "tags": [
                    "Regulator"
                ],
                "summary": "Get all regulators",
                "operationId": "fae92c69db46fc09ecb42cde424c8c5d",
                "parameters": [
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Filter by country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "published",
                                "pending",
                                "rejected"
                            ]
                        }
                    },
                    {
                        "name": "enforced",
                        "in": "query",
                        "description": "Filter by enforced status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name, abbreviation, or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "language_code",
                        "in": "query",
                        "description": "Language code for translations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Regulator"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Regulator"
                ],
                "summary": "Create a new regulator",
                "operationId": "f14d0a32116db30b4e05d80b88da83f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Financial Conduct Authority"
                                    },
                                    "abreviation": {
                                        "type": "string",
                                        "example": "FCA"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United Kingdom"
                                    },
                                    "country_p": {
                                        "type": "string",
                                        "example": "UK"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Financial regulator in the UK"
                                    },
                                    "description_p": {
                                        "type": "string",
                                        "example": "UK financial regulator"
                                    },
                                    "rating": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.5
                                    },
                                    "rating_p": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.5
                                    },
                                    "capitalization": {
                                        "type": "string",
                                        "example": "High capitalization requirements"
                                    },
                                    "capitalization_p": {
                                        "type": "string",
                                        "example": "High cap requirements"
                                    },
                                    "segregated_clients_money": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "segregated_clients_money_p": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "deposit_compensation_scheme": {
                                        "type": "string",
                                        "example": "FSCS protection"
                                    },
                                    "deposit_compensation_scheme_p": {
                                        "type": "string",
                                        "example": "FSCS"
                                    },
                                    "negative_balance_protection": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "negative_balance_protection_p": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "rebates": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "rebates_p": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "enforced": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "enforced_p": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "max_leverage": {
                                        "type": "string",
                                        "example": "1:30"
                                    },
                                    "max_leverage_p": {
                                        "type": "string",
                                        "example": "1:30"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://www.fca.org.uk"
                                    },
                                    "website_p": {
                                        "type": "string",
                                        "example": "https://www.fca.org.uk"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "published",
                                            "pending",
                                            "rejected"
                                        ],
                                        "example": "published"
                                    },
                                    "status_reason": {
                                        "type": "string",
                                        "example": "Approved regulator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Regulator created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Regulator created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Regulator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/regulators/create": {
            "get": {
                "tags": [
                    "Regulator"
                ],
                "summary": "Get form data for creating regulator",
                "operationId": "6b6ca2713fb0aeb4fa56fd565439cb24",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create form endpoint"
                                        },
                                        "data": {
                                            "properties": {
                                                "statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "countries": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/regulators/{id}": {
            "get": {
                "tags": [
                    "Regulator"
                ],
                "summary": "Get regulator by ID",
                "operationId": "46f3113fa5b1bb45d0a7e42fea307a51",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Regulator ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Regulator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Regulator not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Regulator"
                ],
                "summary": "Update regulator",
                "operationId": "ec0fae47ba6fb46d8f71bed0e4ece9ea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Regulator ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Financial Conduct Authority"
                                    },
                                    "abreviation": {
                                        "type": "string",
                                        "example": "FCA"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "United Kingdom"
                                    },
                                    "country_p": {
                                        "type": "string",
                                        "example": "UK"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated financial regulator in the UK"
                                    },
                                    "description_p": {
                                        "type": "string",
                                        "example": "Updated UK financial regulator"
                                    },
                                    "rating": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.8
                                    },
                                    "rating_p": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.8
                                    },
                                    "capitalization": {
                                        "type": "string",
                                        "example": "Updated high capitalization requirements"
                                    },
                                    "capitalization_p": {
                                        "type": "string",
                                        "example": "Updated high cap requirements"
                                    },
                                    "segregated_clients_money": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "segregated_clients_money_p": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "deposit_compensation_scheme": {
                                        "type": "string",
                                        "example": "FSCS protection"
                                    },
                                    "deposit_compensation_scheme_p": {
                                        "type": "string",
                                        "example": "FSCS"
                                    },
                                    "negative_balance_protection": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "negative_balance_protection_p": {
                                        "type": "string",
                                        "example": "Yes"
                                    },
                                    "rebates": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "rebates_p": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "enforced": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "enforced_p": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "max_leverage": {
                                        "type": "string",
                                        "example": "1:30"
                                    },
                                    "max_leverage_p": {
                                        "type": "string",
                                        "example": "1:30"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://www.fca.org.uk"
                                    },
                                    "website_p": {
                                        "type": "string",
                                        "example": "https://www.fca.org.uk"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "published",
                                            "pending",
                                            "rejected"
                                        ],
                                        "example": "published"
                                    },
                                    "status_reason": {
                                        "type": "string",
                                        "example": "Updated approved regulator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Regulator updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Regulator updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Regulator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Regulator not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Regulator"
                ],
                "summary": "Delete regulator",
                "operationId": "5194167faf9f83653fc807b08e493788",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Regulator ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Regulator deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Regulator deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Regulator not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/transaltions/": {
            "get": {
                "tags": [
                    "Translation"
                ],
                "summary": "Get translations",
                "operationId": "d9672fe3a00d8a312a1a6d0586689657",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "These request do not match our records"
                    }
                }
            }
        },
        "/api/v1/translation": {
            "post": {
                "tags": [
                    "Translation"
                ],
                "summary": "Add translation data",
                "operationId": "752ea594f8bcf2e2597136e21a5e0314",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "translationable_type": {
                                        "type": "string"
                                    },
                                    "translationable_id": {
                                        "type": "string"
                                    },
                                    "language_code": {
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "json"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "These credentials do not match our records"
                    }
                }
            }
        },
        "/api/v1/translation/{id}": {
            "get": {
                "tags": [
                    "Translation"
                ],
                "summary": "Translate service API",
                "operationId": "05be1aacb6bd92955ca2744502dbc90e",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "These request do not match our records"
                    }
                }
            },
            "put": {
                "tags": [
                    "Translation"
                ],
                "summary": "Add translation data",
                "operationId": "0c615cde8244fbb6745decca413782a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "translationable_type": {
                                        "type": "string"
                                    },
                                    "translationable_id": {
                                        "type": "string"
                                    },
                                    "language_code": {
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "json"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "These credentials do not match our records"
                    }
                }
            }
        },
        "/api/v1/transaltion/{id}": {
            "delete": {
                "tags": [
                    "Translation"
                ],
                "summary": "Delete translation",
                "operationId": "cc3a5c03d2bf497fd46c4f8c2e096e44",
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AcountType": {
                "required": [
                    "name",
                    "broker_type",
                    "broker_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "example": "Standard Account"
                    },
                    "broker_type": {
                        "type": "string",
                        "enum": [
                            "broker",
                            "crypto",
                            "prop_firm"
                        ],
                        "example": "broker"
                    },
                    "commission_value": {
                        "type": "number",
                        "format": "float",
                        "example": 1.5
                    },
                    "commission_value_p": {
                        "type": "number",
                        "format": "float",
                        "example": 1.5
                    },
                    "commission_unit": {
                        "type": "string",
                        "example": "pips"
                    },
                    "commission_unit_p": {
                        "type": "string",
                        "example": "pips"
                    },
                    "execution_model": {
                        "type": "string",
                        "example": "STP"
                    },
                    "execution_model_p": {
                        "type": "string",
                        "example": "STP"
                    },
                    "max_leverage": {
                        "type": "string",
                        "example": "1:500"
                    },
                    "max_leverage_p": {
                        "type": "string",
                        "example": "1:500"
                    },
                    "spread_type": {
                        "type": "string",
                        "example": "Fixed"
                    },
                    "spread_type_p": {
                        "type": "string",
                        "example": "Fixed"
                    },
                    "min_deposit_value": {
                        "type": "string",
                        "example": "100"
                    },
                    "min_deposit_unit": {
                        "type": "string",
                        "example": "USD"
                    },
                    "min_deposit_value_p": {
                        "type": "string",
                        "example": "100"
                    },
                    "min_deposit_unit_p": {
                        "type": "string",
                        "example": "USD"
                    },
                    "min_trade_size_value": {
                        "type": "string",
                        "example": "0.01"
                    },
                    "min_trade_size_unit": {
                        "type": "string",
                        "example": "lots"
                    },
                    "min_trade_size_value_p": {
                        "type": "string",
                        "example": "0.01"
                    },
                    "min_trade_size_unit_p": {
                        "type": "string",
                        "example": "lots"
                    },
                    "stopout_level_value": {
                        "type": "string",
                        "example": "20"
                    },
                    "stopout_level_unit": {
                        "type": "string",
                        "example": "%"
                    },
                    "stopout_level_value_p": {
                        "type": "string",
                        "example": "20"
                    },
                    "stopout_level_unit_p": {
                        "type": "string",
                        "example": "%"
                    },
                    "trailing_stops": {
                        "type": "boolean",
                        "example": true
                    },
                    "trailing_stops_p": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_scalping": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_scalping_p": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_hedging": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_hedging_p": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_news_trading": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_news_trading_p": {
                        "type": "boolean",
                        "example": true
                    },
                    "allow_cent_accounts": {
                        "type": "boolean",
                        "example": false
                    },
                    "allow_cent_accounts_p": {
                        "type": "boolean",
                        "example": false
                    },
                    "allow_islamic_accounts": {
                        "type": "boolean",
                        "example": false
                    },
                    "allow_islamic_accounts_p": {
                        "type": "boolean",
                        "example": false
                    },
                    "mobile_url_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "mobile_url_id_p": {
                        "type": "integer",
                        "example": 1
                    },
                    "webplaform_url_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "webplaform_url_id_p": {
                        "type": "integer",
                        "example": 1
                    },
                    "swap_url_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "swap_url_id_p": {
                        "type": "integer",
                        "example": 1
                    },
                    "comission_url_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "comission_url_id_p": {
                        "type": "integer",
                        "example": 1
                    },
                    "broker_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "zone_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "broker": {
                        "type": "object"
                    },
                    "zone": {
                        "type": "object"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Broker": {
                "required": [
                    "broker_type_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "registration_language": {
                        "type": "string",
                        "example": "en",
                        "nullable": true
                    },
                    "registration_zone": {
                        "type": "string",
                        "example": "US",
                        "nullable": true
                    },
                    "broker_type_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BrokerOption": {
                "required": [
                    "name",
                    "slug",
                    "data_type",
                    "form_type",
                    "meta_data",
                    "for_crypto",
                    "for_brokers",
                    "for_props",
                    "required",
                    "default_language"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "nullable": false
                    },
                    "name": {
                        "type": "string",
                        "nullable": false
                    },
                    "slug": {
                        "type": "string",
                        "nullable": false
                    },
                    "default_language": {
                        "type": "string",
                        "nullable": false
                    },
                    "data_type": {
                        "type": "string",
                        "nullable": false
                    },
                    "form_type": {
                        "type": "string",
                        "nullable": false
                    },
                    "meta_data": {
                        "type": "string",
                        "nullable": true
                    },
                    "for_crypto": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "for_brokers": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "for_props": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "required": {
                        "type": "boolean",
                        "nullable": false
                    },
                    "publish": {
                        "type": "boolean",
                        "default": true,
                        "nullable": false
                    },
                    "position": {
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": false
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "Company": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 250,
                        "example": "TechCorp Solutions"
                    },
                    "name_p": {
                        "type": "string",
                        "maxLength": 250,
                        "example": "TechCorp Solutions P"
                    },
                    "licence_number": {
                        "type": "string",
                        "example": "TECH-2024-001"
                    },
                    "licence_number_p": {
                        "type": "string",
                        "maxLength": 250,
                        "example": "TECH-2024-001-P"
                    },
                    "banner": {
                        "type": "string",
                        "example": "https://example.com/banners/techcorp-banner.jpg"
                    },
                    "banner_p": {
                        "type": "string",
                        "example": "https://example.com/banners/techcorp-banner-p.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "Leading technology solutions provider"
                    },
                    "description_p": {
                        "type": "string",
                        "example": "Leading technology solutions provider"
                    },
                    "year_founded": {
                        "type": "string",
                        "example": "2018"
                    },
                    "year_founded_p": {
                        "type": "string",
                        "example": "2018"
                    },
                    "employees": {
                        "type": "string",
                        "example": "250-500"
                    },
                    "employees_p": {
                        "type": "string",
                        "example": "250-500"
                    },
                    "headquarters": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "San Francisco, California, USA"
                    },
                    "headquarters_p": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "San Francisco, California, USA"
                    },
                    "offices": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "New York, London, Singapore, Tokyo"
                    },
                    "offices_p": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": "New York, London, Singapore, Tokyo"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "published",
                            "pending",
                            "rejected"
                        ],
                        "example": "published"
                    },
                    "status_reason": {
                        "type": "string",
                        "maxLength": 1000,
                        "example": ""
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "broker_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "zone_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "broker": {
                        "type": "object"
                    },
                    "zone": {
                        "type": "object"
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "OptionCategory": {
                "required": [
                    "name",
                    "default_language"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": false
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "default_language": {
                        "type": "string",
                        "nullable": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": false
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "OptionValue": {
                "required": [
                    "option_slug",
                    "value",
                    "broker_id",
                    "broker_option_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "option_slug": {
                        "type": "string",
                        "example": "minimum_deposit"
                    },
                    "value": {
                        "type": "string",
                        "example": "100"
                    },
                    "public_value": {
                        "type": "string",
                        "example": "$100",
                        "nullable": true
                    },
                    "status": {
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "status_message": {
                        "type": "string",
                        "example": "Active option",
                        "nullable": true
                    },
                    "default_loading": {
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "type": {
                        "type": "string",
                        "example": "number",
                        "nullable": true
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true
                    },
                    "is_invariant": {
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "delete_by_system": {
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "broker_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "broker_option_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "zone_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Regulator": {
                "title": "Regulator",
                "description": "Regulator model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Financial Conduct Authority"
                    },
                    "abreviation": {
                        "type": "string",
                        "example": "FCA"
                    },
                    "country": {
                        "type": "string",
                        "example": "United Kingdom"
                    },
                    "country_p": {
                        "type": "string",
                        "example": "UK"
                    },
                    "description": {
                        "type": "string",
                        "example": "Financial regulator in the UK"
                    },
                    "description_p": {
                        "type": "string",
                        "example": "UK financial regulator"
                    },
                    "rating": {
                        "type": "number",
                        "format": "float",
                        "example": 4.5
                    },
                    "rating_p": {
                        "type": "number",
                        "format": "float",
                        "example": 4.5
                    },
                    "capitalization": {
                        "type": "string",
                        "example": "High capitalization requirements"
                    },
                    "capitalization_p": {
                        "type": "string",
                        "example": "High cap requirements"
                    },
                    "segregated_clients_money": {
                        "type": "string",
                        "example": "Yes"
                    },
                    "segregated_clients_money_p": {
                        "type": "string",
                        "example": "Yes"
                    },
                    "deposit_compensation_scheme": {
                        "type": "string",
                        "example": "FSCS protection"
                    },
                    "deposit_compensation_scheme_p": {
                        "type": "string",
                        "example": "FSCS"
                    },
                    "negative_balance_protection": {
                        "type": "string",
                        "example": "Yes"
                    },
                    "negative_balance_protection_p": {
                        "type": "string",
                        "example": "Yes"
                    },
                    "rebates": {
                        "type": "boolean",
                        "example": true
                    },
                    "rebates_p": {
                        "type": "boolean",
                        "example": true
                    },
                    "enforced": {
                        "type": "boolean",
                        "example": true
                    },
                    "enforced_p": {
                        "type": "boolean",
                        "example": true
                    },
                    "max_leverage": {
                        "type": "string",
                        "example": "1:30"
                    },
                    "max_leverage_p": {
                        "type": "string",
                        "example": "1:30"
                    },
                    "website": {
                        "type": "string",
                        "example": "https://www.fca.org.uk"
                    },
                    "website_p": {
                        "type": "string",
                        "example": "https://www.fca.org.uk"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "published",
                            "pending",
                            "rejected"
                        ],
                        "example": "published"
                    },
                    "status_reason": {
                        "type": "string",
                        "example": "Approved regulator"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Url": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "urlable_type": {
                        "type": "string",
                        "example": "Modules\\\\Brokers\\\\Models\\\\AcountType"
                    },
                    "urlable_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "url_type": {
                        "type": "string",
                        "example": "website"
                    },
                    "url": {
                        "type": "string",
                        "example": "https://example.com"
                    },
                    "url_p": {
                        "type": "string",
                        "example": "https://example.com"
                    },
                    "name": {
                        "type": "string",
                        "example": "Website"
                    },
                    "name_p": {
                        "type": "string",
                        "example": "Website"
                    },
                    "slug": {
                        "type": "string",
                        "example": "website"
                    },
                    "description": {
                        "type": "string",
                        "example": "Company website"
                    },
                    "category_position": {
                        "type": "integer",
                        "example": 1
                    },
                    "option_category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "broker_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "zone_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "zone": {
                        "type": "object"
                    },
                    "broker": {
                        "type": "object"
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Translation": {
                "required": [
                    "language_code"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "translationable_type": {
                        "type": "string",
                        "nullable": false
                    },
                    "translationable_id": {
                        "type": "integer",
                        "nullable": false
                    },
                    "language_code": {
                        "type": "string",
                        "nullable": false
                    },
                    "property": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "translation_type": {
                        "type": "string",
                        "enum": [
                            "columns",
                            "property",
                            "properties"
                        ]
                    },
                    "metadata": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": false
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": false
                    }
                },
                "type": "object"
            },
            "Zone": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "example": "United States"
                    },
                    "zone_code": {
                        "type": "string",
                        "example": "US"
                    },
                    "countries": {
                        "type": "string",
                        "example": "US,CA"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "AccountType",
            "description": "AccountType"
        },
        {
            "name": "Broker",
            "description": "Broker"
        },
        {
            "name": "Company",
            "description": "Company"
        },
        {
            "name": "OptionValue",
            "description": "OptionValue"
        },
        {
            "name": "Regulator",
            "description": "Regulator"
        },
        {
            "name": "Translation",
            "description": "Translation"
        }
    ]
}